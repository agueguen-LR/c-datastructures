# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install lcov
        run: sudo apt-get install lcov

      - name: Install valgrind
        run: sudo apt-get install valgrind

      - name: Install flawfinder
        run: sudo apt-get install flawfinder

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_COVERAGE=1 -DUSE_VALGRIND=1 

      - name: Build
        working-directory: ${{github.workspace}}/build
        run: make

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: make test

      - name: Flaw Finder
        working-directory: ${{github.workspace}}/build
        run: make flawfinder

      - name: Coverage
        working-directory: ${{github.workspace}}/build
        run: make coverage

      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v2.3.4
        with:
          file: ${{github.workspace}}/build/coverage.info
          github-token: ${{secrets.COVERALLS_REPO_TOKEN}}
